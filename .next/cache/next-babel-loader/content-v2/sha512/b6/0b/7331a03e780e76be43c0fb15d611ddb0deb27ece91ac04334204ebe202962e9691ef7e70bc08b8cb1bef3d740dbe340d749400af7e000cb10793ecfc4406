{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Administrator/Visual Studio Code/projects/movie-grid-nextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Visual Studio Code/projects/movie-grid-nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar fetchMoviesJSON = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(searchQuery) {\n    var response, movies;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://localhost:3000/movies.json');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            movies = _context.sent;\n\n            if (!(searchQuery === undefined || searchQuery === \"\")) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", movies);\n\n          case 10:\n            return _context.abrupt(\"return\", movies.filter(function (movie) {\n              return movie.title.toLowerCase().includes(searchQuery.toLowerCase());\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchMoviesJSON(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { fetchMoviesJSON };","map":{"version":3,"sources":["C:/Users/Administrator/Visual Studio Code/projects/movie-grid-nextjs/services/fetchMovies.js"],"names":["fetchMoviesJSON","searchQuery","fetch","response","json","movies","undefined","filter","movie","title","toLowerCase","includes"],"mappings":";;;AAAA,IAAMA,eAAe;AAAA,sEAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,KAAK,CAAC,mCAAD,CADR;;AAAA;AACdC,YAAAA,QADc;AAAA;AAAA,mBAECA,QAAQ,CAACC,IAAT,EAFD;;AAAA;AAEdC,YAAAA,MAFc;;AAAA,kBAGhBJ,WAAW,KAAKK,SAAhB,IAA6BL,WAAW,KAAK,EAH7B;AAAA;AAAA;AAAA;;AAAA,6CAITI,MAJS;;AAAA;AAAA,6CAOTA,MAAM,CAACE,MAAP,CAAc,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCV,WAAW,CAACS,WAAZ,EAAnC,CAAJ;AAAA,aAAnB,CAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfV,eAAe;AAAA;AAAA;AAAA,GAArB;;AAWA,SAASA,eAAT","sourcesContent":["const fetchMoviesJSON = async (searchQuery) => {\r\n    const response = await fetch('http://localhost:3000/movies.json');\r\n    const movies = await response.json();\r\n    if (searchQuery === undefined || searchQuery === \"\") {//\r\n        return movies;\r\n    }\r\n    else {\r\n        return movies.filter(movie => movie.title.toLowerCase().includes(searchQuery.toLowerCase()));//.target.value\r\n    }\r\n}\r\n\r\nexport { fetchMoviesJSON };"]},"metadata":{},"sourceType":"module"}